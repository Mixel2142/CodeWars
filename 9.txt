#include <math.h>

/*
cout<<"left="<<left<<"\t"<<"right="<<right<<endl;
cout<<"mind="<<mind<<"\t"<<"maxd="<<maxd<<endl;
cout<<"minb="<<minb<<"\t"<<"maxb="<<maxb<<endl;
cout<<"minr="<<minr<<"\t"<<"maxr="<<maxr<<endl;

cout<<"rec="<<rec(0,1)<<endl;
*/
int recMax2Min(const int &n,const int &stop)// stop - отсчет с конца 
{
int fsum =n;
//static int razn = abs(pow(2,n)-stop);
static int count = 1;
int a=n-1,b=n-2;
if(n==2)return fsum+1;
fsum+=a; count++;//3
fsum+=a; count++;//3
fsum+=b; count++;//2
if(b!=1){fsum+=a; count++;}//3
//cout<<"b="<<b<<endl;

cout<<endl<<"n="<<n<<endl;
cout<<"count="<<count<<endl;
cout<<"fsum="<<fsum<<endl;
if(count < stop)return fsum+recMax2Min(n-1,stop)-(n-1);
else
{
cout<<endl<<"count-stop="<<count-stop<<endl;
cout<<"b="<<b<<endl;
cout<<"fsum="<<fsum<<endl;
cout<<"n="<<n<<endl;
switch(count-stop){
case 0: if(b != 1) return fsum-b-1;
        else return fsum-b;
case 1: return fsum-a-b;

case 2: return fsum-b-a-a;

case 3:return fsum-b-a-a-a;

default :return fsum;
};
}
//{
//if(n != 1 && )

//}
}
/*
int recMin2Max(int n,int stop)//n=0 ; n=1 
{
int a=n,b=n+1,c=n+2;
return n != max ? (a+b+c+rec(n+1,max)) : (a+b+c);
}
*/
long long countOnes ( int left, int right )
{
int res=right-left;
int minb=2;
int mind=1;//degree for minb
int minr=0;//residual between left and minp

int maxb=2;
int maxd=1;//degree for maxb
int maxr=0;//residual between right and maxp

int cnt=0;//count

while(minb<left){minb*=2;mind++;}
while(maxb<right){maxb*=2;maxd++;}

cout<<"recMax2Min(4,6)="<<recMax2Min(4,9);
/*
if(mind == maxd)
{
if((left-(minb/2)) <= (minb-left))//work with left. use   recMin2Max
{
}
else//work with left. use   recMax2Min
{

}
if((right-(minb/2)) <= (minb-right))//work with right. use   recMin2Max
{
}
else//work with right. use   recMax2Min
{

}

}
else
{


}
*/

	return cnt;
}